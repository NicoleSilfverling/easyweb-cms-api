@{
    Layout = null;
    var planets = Model;

}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="./css/planets.css">
    <title>Planets</title>
</head>

<body>
    <div id="introVideoContainer">
        <video id="introVideo" autoplay muted playsinline>
            <source src="/videos/intro.mp4" type="video/mp4">
        </video>
    </div>
    <div class="layout">

        <div>
            <h1>Click a planet to get more details</h1>

            <!-- Display a list of planet names -->
            <ul id="planetList">
                @foreach (var planet in planets)
                {
                    <li>
                        <h4>@planet.Name</h4>
                        <button class="planetButton" data-planet="@planet.WikiName" data-size="@planet.SizeFactor"
                            data-color="@planet.Color" data-hasrings="@planet.HasRings.ToString()"></button>

                    </li>
                }
            </ul>
        </div>
        <div class="solar-system">
            <div class="sun"></div>

            @foreach (var planet in planets)
            {
                // The orbit size increases based on the planet index.
                var orbitSize = 50 + planets.IndexOf(planet) * 30; // Increasing orbit size

                <div class="orbit" style="width: @(orbitSize * 2)px; height: @(orbitSize * 2)px;">
                    <div class="planet" style="--planet-size: @(planet.SizeFactor / 2.5)px; --planet-color: @planet.Color;">
                        @if (planet.HasRings)
                        {
                            <div class="rings"></div>
                        }
                    </div>
                </div>
            }
        </div>

    </div>









    <!-- Popup for planet details -->
    <div id="planetInfoPopup" class="popup hidden">
        <h2 id="planetTitle"></h2>
        <strong>
            <p id="planetDescription"></p>
        </strong>
        <img id="planetImage" src="" alt="Planet Thumbnail" />

        <p id="planetExtract"></p>
        <button onclick="closePopup()">Close</button>
    </div>

    <script>
        @* introvideo *@
          const introVideo = document.getElementById('introVideo');
        const introContainer = document.getElementById('introVideoContainer');

        introVideo.addEventListener('ended', () => {
            introContainer.classList.add('hidden');
        });



        // Listen for planet button clicks
        document.querySelectorAll('.planetButton').forEach(button => {
            button.addEventListener('click', function () {
                let planetName = this.getAttribute('data-planet');
                fetchPlanetData(planetName);
            });
        });

        // Fetch data for the selected planet
        async function fetchPlanetData(planet) {
            try {
                let response = await fetch(`/data/${planet}`);
                let data = await response.json();
                showPlanetInfo(data);
            } catch (error) {
                console.error("Error fetching planet data:", error);
            }
        }

        // Display planet information in the popup
        function showPlanetInfo(data) {
            document.getElementById('planetTitle').textContent = data.title;
            document.getElementById('planetDescription').textContent = data.description;
            document.getElementById('planetExtract').textContent = data.extract;

            if (data.thumbnail && data.thumbnail.source) {
                document.getElementById('planetImage').src = data.thumbnail.source;
            }

            document.getElementById("planetInfoPopup").classList.remove("hidden");
        }

        // Close the popup
        function closePopup() {
            document.getElementById("planetInfoPopup").classList.add("hidden");
        }

        // Set planets size and color
        document.querySelectorAll('.planetButton').forEach(planet => {
            const size = parseFloat(planet.dataset.size);
            const color = planet.dataset.color;

            planet.style.setProperty('--planet-size', `${size}px`);
            planet.style.setProperty('--planet-color', color);
        });

    </script>
</body>

</html>
